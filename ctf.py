"""
The CTF

"""

from functions import simple_rsa_encrypt, simple_rsa_decrypt, my_e
from data import *

ctf_n = 22675032247964811304377741010681025768705689936049346485778680101377361780419412229892976744577715670202551587179341582317473747052372556076228084822612474800300574464210447554115735854080872047541104271586491991401193940884347823153371229107896688630096412115433919576692709742447574583916548666951113372331515816131683709597784512003051684059499878771165735333514033053258875472338691622523281267529622600174783673495821291605920651313776635795635900964473267552884315741153907681424973048913859674207556856534666416913160161946874226983650166899194349986981105539303324539741705807370244360701173598058846718087297
ctf_d = 5603625773044815659638095936783647303812462489956134941844629795717041539827468460188086902897305079490982582448946644906141642236602620171972932264019281350468713917670207799967323159325172096403187890544498898221367121878677652986740321141210228863894311467134103811039796252325875733724650536489925266311798705229715550565137462987172371523727795446266333911997133994937800842662295597364395146595455382713122181908007116609168400495194310792084942243492003737801279279005363735843788853944718629196270074246264378176086291389509478648601161128087639912520342768368147135338477713666218082468362583131627181393601


# Decrypt the valnums 

# Obtain vote + valnum from voter (encrypted with AES and signed with RSA)




"""
Asks the user for a vote, then signs and encrypts it
"""
def vote(user):
    vote = input("Enter the number of the candidate you want to vote for: \n1. Mr. Grumble \n2. Madam Goob\n")
    while vote != 1 and vote != 2:
        print(f"Please enter a number, either 1 or 2.")
        vote = input("Enter the number of the candidate you want to vote for: \n1. Mr. Grumble \n2. Madam Goob\n")
    # Combine valnum and vote as a string (prevents attaching vote to someone else's valnum)
    combined_x = str(vote) + str(user.valnum)
    # Sign vote + valnum with RSA
    signed_x = simple_rsa_encrypt(combined_x, user.privkey, user.pubkey)
    # Encrypt vote with user's aes key
    encrypted_x = signed_x #TODO: make this work
    return encrypted_x


"""

"""
def verify_vote(user, encrypted_vote):
    # Decrypt with AES
    decrypted_x = encrypted_vote #TODO: make this decrypt
    # Unsign message
    unsigned_x = simple_rsa_decrypt(decrypted_x, my_e, user.pubkey)
    print(f"Unsigned vote + valnum: {unsigned_x}")



encrypted_vote_valnum = vote(grimp)

verify_vote(grimp, encrypted_vote_valnum)


        
    