
import gmpy2
from cryptography.hazmat.primitives.asymmetric import rsa

plaintext = 1234567
person_n = 1234
person_e = 65337

def simple_rsa_encrypt(x, e, n):
    return gmpy2.powmod(x, e, n)

def simple_rsa_decrypt(y, d, n):
    return gmpy2.powmod(y, d, n)

ciphertext1 = 8120763567754170472933039302503762716458101503112854016590203032782237528853227048370272685775974770205833612470628464197597763086871740889094566706534336514699054139246946910214427832499244703148896850470516193640776901916372371157960511102255655606298199536901374299258931756703336154145728133921791879537989465188336381760243525898657562500864992104927571330805594381613076731119048837814737320524372729425204789218421743031003517612397888033644536370888351941625543875946828691820545502289641480593987383449413823616730476246873840626019851954996830848137890591428557353436283573075834787729749909328480083874013
d1 = 478813314357872329991716973534124298800462518444497810049545364410812069277014076577589807139518856027755082807496512884983893638973347907254609007782393044457880756251324686905900602119525962922614109327965804599352227685665273307706530030415556011646279822143894539722756127869956540858023367597851943651460420499692706471921367680052119618520484437724205887070864320662599282911687278964102638690112999599236121172317211809220572845258268551238442426042739739693882378889934455048368673657177648161904949993480543126493007746765664110855311258362178644333012364824875125289209220773339489789052430253247093242433
n1 = 23505609125896538494881764265547493760663604547788054664582063331379318789668667817726968682024454882015718997719025441905010814544866143668723079058452953524072008331418026970600754877233987289932105530357224671181832918228797765368661317305875875906563476182654993595363496893043701736488597335026533955869791166250382318120581984635371731610996309942123769418068121950499691209894671529838443480383452992255882592393216801279501492295968099043604126796956578826251129924038265003394245584311619849015104114257182555770830253840074895170151124790472149264738790025130003896743059995281669010245547333017466940644161
d2 = 6353894431780571126825816546699421980986619102899766801570035263039113316656785450183101145583563022009251531494930463335972573223283512901855082786865754333968161317003224373910266681308049920517218762642104672289107946165928541852097639589324688730964611828930166955392977456220003518949415333147614477684334184362793939919489494631455061890177402653359823856710037884869631169683060540791439160332637075433310821799156261975064926100589190131547718513552331971669986946686122632988819591036090680924948967266175738480211142255455904573985569751895419335445685896376392153225725321768772699583467769491190735390473
n2 = 23203787995965858126534243788088711599683498057881534429649805028072794463041109330694856780235705437056743431382105080555535190646067735709844899175460879404060592234059975247573673659472064395460657865110643815212931431398443042870886158796699661504581955055867399518309905469090068573575606413044422713919742225045120245004029595415645263951479849263011928995154696321414325534798617114789810096462410716258787861419621508769827443742800660643533960949853125392561806309375120489979412765570061044677608212631988511732733533235039745167810892065827034476700747852541676577603131630919502319390772762878782773238857
ciphertext2 = 2148105986407367296773511677485684701084783978149257159918510649161232773801651094101447846154251848837989849759173451483374194505421946223280515400429135947979852090472970941548680755444606929722557520200309301179100059066611587460257041212636670424712784826174965332768519590746206803436369067535458628071707587924073743331376486137538376297953471534595054533074235578645546468914248530197945858907685924291725532050659320683966385831319674104850663762438342156870739747188771314802143460292769164455995382287250389795330827436442420123673545686243350352362714164264478132813764536162902540127403246280006417160378


print("Result for simple encrypt:", simple_rsa_decrypt(ciphertext2, d1, n1))



def int_to_bytes(i):
    # i might be a gmpy2 big integer; convert back to a Python int
    i = int(i)
    return i.to_bytes((i.bit_length()+7)//8, byteorder='big')

def bytes_to_int(b):
    return int.from_bytes(b, byteorder='big')

bytes1 = "plaintext".encode()
x_as_int = bytes_to_int(bytes1)
y_as_int = simple_rsa_encrypt(x_as_int, person_e, n1)




